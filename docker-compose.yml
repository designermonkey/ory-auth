---
x-shared-env:
  kratos_dsn: &kratos-dsn DSN=mysql://${KRATOS_DATABASE_USER}:${KRATOS_DATABASE_PASSWORD}@tcp(kratos_database:3306)/${KRATOS_DATABASE_SCHEMA}?sql_mode=''&max_conns=20&max_idle_conns=4
  kratos_version: &kratos-version VERSION=${KRATOS_VERSION}
  log_level: &log-level LOG_LEVEL=${LOG_LEVEL}
  traefik-labels: &traefik-labels
    traefik.docker.network: gateway
    traefik.enable: 'true'
    traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
    traefik.http.middlewares.auth.forwardauth.address: http://oathkeeper:4456/decisions
    traefik.http.middlewares.auth.forwardauth.authResponseHeaders: X-Id-Token,Authorization
    traefik.http.middlewares.auth.forwardauth.trustForwardHeader: 'true'
    traefik.http.routers.traefik-http.entrypoints: http
    traefik.http.routers.traefik-http.middlewares: https-redirect
    traefik.http.routers.traefik-http.rule: Host(`traefik.${HOSTNAME}`)
    traefik.http.routers.traefik-https.entrypoints: https
    traefik.http.routers.traefik-https.rule: Host(`traefik.${HOSTNAME}`)
    traefik.http.routers.traefik-https.service: api@internal
    traefik.http.routers.traefik-https.tls.certresolver: digitalocean
    traefik.http.routers.traefik-https.tls.domains[0].main: ${HOSTNAME}
    traefik.http.routers.traefik-https.tls.domains[0].sans: '*.${HOSTNAME}'
    traefik.http.routers.traefik-https.tls: 'true'
    # traefik.http.routers.traefik-https.middlewares: auth@docker
    traefik.http.services.traefik.loadbalancer.server.port: 8080
  auth-labels: &auth-labels
    traefik.docker.network: gateway
    traefik.enable: 'true'
    traefik.http.routers.auth-http.entrypoints: http
    traefik.http.routers.auth-http.middlewares: https-redirect
    traefik.http.routers.auth-http.rule: Host(`auth.${HOSTNAME}`)
    traefik.http.routers.auth-https.entrypoints: https
    traefik.http.routers.auth-https.rule: Host(`auth.${HOSTNAME}`)
    traefik.http.routers.auth-https.service: auth
    traefik.http.routers.auth-https.tls: 'true'
    traefik.http.services.auth.loadbalancer.server.port: 4455
  admin-labels: &admin-labels
    traefik.docker.network: gateway
    traefik.enable: 'true'
    traefik.http.routers.admin-http.entrypoints: http
    traefik.http.routers.admin-http.middlewares: https-redirect
    traefik.http.routers.admin-http.rule: Host(`admin.${HOSTNAME}`)
    traefik.http.routers.admin-https.entrypoints: https
    traefik.http.routers.admin-https.rule: Host(`admin.${HOSTNAME}`)
    traefik.http.routers.admin-https.service: admin
    traefik.http.routers.admin-https.tls: 'true'
    traefik.http.routers.admin-https.middlewares: auth@docker
    traefik.http.services.admin.loadbalancer.server.port: 80
  mail-labels: &mail-labels
    traefik.docker.network: gateway
    traefik.enable: 'true'
    traefik.http.routers.mail-http.entrypoints: http
    traefik.http.routers.mail-http.middlewares: https-redirect
    traefik.http.routers.mail-http.rule: Host(`mail.${HOSTNAME}`)
    traefik.http.routers.mail-https.entrypoints: https
    traefik.http.routers.mail-https.rule: Host(`mail.${HOSTNAME}`)
    traefik.http.routers.mail-https.service: mail
    traefik.http.routers.mail-https.tls: 'true'
    traefik.http.routers.mail-https.middlewares: auth@docker
    traefik.http.services.mail.loadbalancer.server.port: 1080
  whoami-labels: &whoami-labels
    traefik.docker.network: gateway
    traefik.enable: 'true'
    traefik.http.routers.whoami-http.entrypoints: http
    traefik.http.routers.whoami-http.middlewares: https-redirect
    traefik.http.routers.whoami-http.rule: Host(`whoami.${HOSTNAME}`)
    traefik.http.routers.whoami-https.entrypoints: https
    traefik.http.routers.whoami-https.rule: Host(`whoami.${HOSTNAME}`)
    traefik.http.routers.whoami-https.service: whoami
    traefik.http.routers.whoami-https.tls: 'true'
    traefik.http.routers.whoami-https.middlewares: auth@docker
    traefik.http.services.whoami.loadbalancer.server.port: 80

networks:
  database:
    external: false
  default:
    external: false
  gateway:
    attachable: true
    driver: overlay
    external: false

services:
  kratos_migrate:
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    depends_on:
      - kratos_database
    environment:
      - *kratos-dsn
      - *log-level
      - *kratos-version
    image: oryd/kratos:${KRATOS_VERSION}
    networks:
      - database
    restart: on-failure
    volumes:
      - ./etc/kratos:/etc/config/kratos

  kratos_database:
    environment:
      - MYSQL_ROOT_PASSWORD=${KRATOS_DATABASE_ROOT_PASSWORD}
      - MYSQL_DATABASE=${KRATOS_DATABASE_SCHEMA}
      - MYSQL_USER=${KRATOS_DATABASE_USER}
      - MYSQL_PASSWORD=${KRATOS_DATABASE_PASSWORD}
    image: mariadb:${MARIADB_VERSION}
    networks:
      - database
    ports:
      - 3316:3306
    restart: unless-stopped
    volumes:
      - ./var/kratos/mysql:/var/lib/mysql

  kratos_server:
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    depends_on:
      - kratos_database
    environment:
      - *kratos-dsn
      - *log-level
      - *kratos-version
      - COOKIES_DOMAIN=${HOSTNAME}
      - SERVE_PUBLIC_BASE_URL=https://auth.${HOSTNAME}/.ory/kratos/public/
      - SERVE_PUBLIC_CORS_ALLOWED_ORIGINS=https://*.${HOSTNAME}
      - SELFSERVICE_ALLOWED_RETURN_URLS=https://*.${HOSTNAME}
      - SELFSERVICE_DEFAULT_BROWSER_RETURN_URL=https://auth.${HOSTNAME}/welcome
      - SELFSERVICE_FLOWS_ERROR_UI_URL=https://auth.${HOSTNAME}/error
      - SELFSERVICE_FLOWS_SETTINGS_UI_URL=https://auth.${HOSTNAME}/settings
      - SELFSERVICE_FLOWS_RECOVERY_UI_URL=https://auth.${HOSTNAME}/recovery
      - SELFSERVICE_FLOWS_VERIFICATION_UI_URL=https://auth.${HOSTNAME}/verification
      - SELFSERVICE_FLOWS_VERIFICATION_AFTER_DEFAULT_BROWSER_RETURN_URL=https://auth.${HOSTNAME}/welcome
      - SELFSERVICE_FLOWS_LOGOUT_AFTER_DEFAULT_BROWSER_RETURN_URL=https://auth.${HOSTNAME}/welcome
      - SELFSERVICE_FLOWS_LOGIN_UI_URL=https://auth.${HOSTNAME}/login
      - SELFSERVICE_FLOWS_REGISTRATION_UI_URL=https://auth.${HOSTNAME}/registration
    image: oryd/kratos:${KRATOS_VERSION}
    networks:
      - database
      - default
    # ports:
    #   - 4433:4433 # public api
    #   - 4434:4434 # private api
    restart: unless-stopped
    volumes:
      - ./etc/kratos:/etc/config/kratos

  kratos_self_ui:
    depends_on:
      - kratos_server
    environment:
      - PORT=4435
      - JWKS_URL=http://oathkeeper:4456/.well-known/jwks.json
      - SECURITY_MODE=jwks
      - KRATOS_BROWSER_URL=https://auth.${HOSTNAME}/.ory/kratos/public
      - KRATOS_PUBLIC_URL=http://kratos_server:4433
      - KRATOS_ADMIN_URL=http://kratos_server:4434
    image: oryd/kratos-selfservice-ui-node:${KRATOS_SELF_UI_VERSION}
    networks:
      - default
    # ports:
    #   - 4435:4435
    restart: on-failure

  kratos_admin_ui:
    depends_on:
      - kratos_server
    deploy:
      labels:
        <<: *admin-labels
    environment:
      KRATOS_ADMIN_URL: http://kratos_server:4433
      KRATOS_PUBLIC_URL: http://kratos_server:4434
    hostname: admin.${HOSTNAME}
    image: ghcr.io/dfoxg/kratos-admin-ui
    labels:
      <<: *admin-labels
    networks:
      - default
      - gateway

  mail:
    deploy:
      labels:
        <<: *mail-labels
    environment:
      - MAILDEV_SMTP_PORT=1025
      - MAILDEV_WEB_PORT=1080
      - MAILDEV_MAIL_DIRECTORY=/maildir
    hostname: mail.${HOSTNAME}
    image: maildev/maildev:${MAILDEV_VERSION}
    labels:
      <<: *mail-labels
    networks:
      - default
      - gateway
    # ports:
    #   - 1080:1080
    volumes:
      - ./var/lib/mail:/maildir

  rules:
    environment:
      NGINX_ENVSUBST_TEMPLATE_DIR: /templates
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: .tpl
      NGINX_ENVSUBST_OUTPUT_DIR: /usr/share/nginx/html
      HOSTNAME: ${HOSTNAME}
    image: nginx:${NGINX_VERSION:-1.25}
    # ports:
    #   - 8082:80
    networks:
      - default
    volumes:
      - ./etc/oathkeeper/access-rules.yml.tpl:/templates/access-rules.yml.tpl

  oathkeeper:
    command: serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"
    depends_on:
      - kratos_server
      - kratos_self_ui
    deploy:
      labels:
        <<: *auth-labels
    environment:
      - *log-level
      - SERVE_PROXY_CORS_ALLOWED_ORIGINS=https://*.${HOSTNAME}
      - ERRORS_HANDLERS_REDIRECT_CONFIG_TO=https://auth.${HOSTNAME}/login
      - MUTATORS_ID_TOKEN_CONFIG_ISSUER_URL=https://${HOSTNAME}
    image: oryd/oathkeeper:${OATHKEEPER_VERSION}
    labels:
      <<: *auth-labels
    hostname: auth.${HOSTNAME}
    networks:
      - default
      - gateway
    # ports:
    #   - 4455:4455 # public api
    #   - 4456:4456 # private api
    restart: on-failure
    volumes:
      - ./etc/oathkeeper:/etc/config/oathkeeper

  traefik:
    deploy:
      labels:
        <<: *traefik-labels
      mode: global
      placement:
        constraints:
          - node.role==manager
    environment:
      - DO_AUTH_TOKEN
    hostname: traefik.${HOSTNAME}
    image: traefik:${TRAEFIK_VERSION}
    labels:
      <<: *traefik-labels
    networks:
      - default
      - gateway
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./etc/traefik/traefik.yaml:/traefik.yaml
      - ./etc/traefik/acme.json:/acme.json
      - /var/run/docker.sock:/var/run/docker.sock:ro

  whoami:
    deploy:
      labels:
        <<: *whoami-labels
    hostname: whoami.${HOSTNAME}
    image: traefik/whoami
    networks:
      - gateway
    labels:
      <<: *whoami-labels

version: '3'
